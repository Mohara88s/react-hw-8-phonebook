{"version":3,"sources":["components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/Container/Container.module.css","components/UserMenu/UserMenu.module.css","components/AppBar/AppBar.module.css","redux/contacts/contacts-actions.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","components/Container/Container.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js"],"names":["module","exports","changeFilter","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","PrivateRoute","children","redirectTo","routeProps","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","to","PublicRoute","restricted","shouldRedirect","Container","className","styles","container","Navigation","nav","exact","link","UserMenu","dispatch","useDispatch","mail","getUserMail","Button","variant","type","onClick","authOperations","logOut","AuthNav","activeStyle","activeLink","AppBar","header","RegisterView","lazy","LoginView","ContactsView","InfoView","App","isFetchingCurrentUser","getIsFetchingCurrent","useEffect","fetchCurrentUser","fallback","Spinner","animation","path","items","createReducer","_","payload","state","filter","id","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","auth","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","thunkAPI","a","post","data","rejectWithValue","message","logIn","operations","getState","persistedToken","get","getAuthError","authError","getRegError","regError","user","email","authSlice","createSlice","name","initialState","extraReducers","fulfilled","action","rejected","pending"],"mappings":"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","file":"static/js/main.e8d06847.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__2rUms\",\"link\":\"Navigation_link__3QPor\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2msaP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__30hm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mail\":\"UserMenu_mail__GVxUv\",\"button\":\"UserMenu_button__1vpVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2plCB\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/add');\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\nexport const deleteContact = createAction('contacts/delete');\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../../redux/auth/';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/login',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/contacts',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import styles from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport styles from './Navigation.module.css';\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav className={styles.nav}>\r\n      {isLoggedIn && (\r\n        <NavLink to=\"/contacts\" exact className={styles.link}>\r\n          Phonebook\r\n        </NavLink>\r\n      )}\r\n\r\n      <NavLink to=\"/info\" exact className={styles.link}>\r\n        Info\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport styles from './UserMenu.module.css';\nimport { Button } from 'react-bootstrap';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const mail = useSelector(authSelectors.getUserMail);\n  return (\n    <div>\n      <p className={styles.mail}>{mail}</p>\n      <Button\n        variant=\"light\"\n        type=\"button\"\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Logout\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './AuthNav.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink to=\"/register\" exact className={styles.link}>\r\n        Registation\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport styles from './AppBar.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header className={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Spinner } from 'react-bootstrap';\n\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\n\nimport Container from './components/Container/Container';\nimport AppBar from './components/AppBar/AppBar';\n\nimport { authOperations, authSelectors } from './redux/auth';\n\nimport 'modern-normalize/modern-normalize.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styles from './App.module.css';\n\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\nconst InfoView = lazy(() => import('./views/InfoView'));\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isFetchingCurrentUser && (\n      <Container className={styles.container}>\n        <Suspense fallback={<Spinner animation=\"border\" variant=\"primary\" />}>\n          <AppBar />\n\n          <Switch>\n            <PublicRoute path=\"/register\" restricted>\n              <RegisterView />\n            </PublicRoute>\n\n            <PublicRoute path=\"/login\" restricted>\n              <LoginView />\n            </PublicRoute>\n\n            <PrivateRoute path=\"/contacts\">\n              <ContactsView />\n            </PrivateRoute>\n\n            <Route path=\"/info\">\n              <InfoView />\n            </Route>\n\n            <Route>\n              <>\n                <Redirect to=\"/info\" />\n              </>\n            </Route>\n          </Switch>\n        </Suspense>\n      </Container>\n    )\n  );\n}\n\nexport default App;\n","import {\r\n  changeFilter,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n  [fetchContactsRequest]: () => null,\r\n  [addContactRequest]: () => null,\r\n  [deleteContactRequest]: () => null,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  loading,\r\n  error,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { store, persistor } from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk(\n  'auth/registration',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  },\n);\n\nconst logIn = createAsyncThunk('auth/login', async (credentials, thunkAPI) => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\nconst logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue('None token');\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getAuthError = state => state.auth.authError;\n\nconst getRegError = state => state.auth.regError;\n\nconst getUserMail = state => state.auth.user.email;\n\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getAuthError,\n  getRegError,\n  getUserMail,\n  getIsFetchingCurrent,\n};\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n  authError: null,\n  regError: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.regError = null;\n    },\n    [authOperations.register.rejected](state, action) {\n      state.regError = action.payload;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.authError = null;\n    },\n    [authOperations.logIn.rejected](state, action) {\n      state.authError = action.payload;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n"],"sourceRoot":""}