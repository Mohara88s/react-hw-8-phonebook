{"version":3,"sources":["components/RegistrationForm/RegistrationForm.module.css","components/ContactList/ContactList.module.css","components/LoginForm/LoginForm.module.css","components/AuthNav/AuthNav.module.css","components/UserMenu/UserMenu.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/Container/Container.module.css","components/Navigation/Navigation.module.css","components/AppBar/AppBar.module.css","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","components/RegistrationForm/RegistrationForm.js","views/RegisterView.js","components/LoginForm/LoginForm.js","views/LoginView.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-operaions.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","views/ContactsView.js","components/Container/Container.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","operations","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","console","log","rejectWithValue","get","authSelectors","getIsLoggedIn","isLoggedIn","getUserMail","user","email","authSlice","createSlice","name","initialState","extraReducers","authOperations","fulfilled","action","payload","RegistrationForm","dispatch","useDispatch","useState","setName","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","className","styles","form","autoComplete","label","type","onChange","RegisterView","LoginForm","LoginView","changeFilter","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getContacts","contacts","items","getFilter","filter","contactsSelectors","getError","error","getLoading","loading","getFiltredContacts","createSelector","contact","toLowerCase","includes","ContactForm","number","hendelInputChange","event","setState","currentTarget","hendelSubmit","props","some","contactItem","alert","newContact","id","uuidv4","onAddContact","this","pattern","title","required","Component","connect","message","addContact","Filter","useSelector","Contact","button","onClick","delete","deleteContact","ContactList","useEffect","filtredContacts","map","item","ContactsView","Container","children","container","Navigation","to","exact","link","UserMenu","mail","AuthNav","activeStyle","activeLink","AppBar","header","App","path","component","createReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55408b39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegistrationForm_form__lWAWB\",\"label\":\"RegistrationForm_label__22k2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__w8aks\",\"item\":\"ContactList_item__J_orZ\",\"error\":\"ContactList_error__21mt_\",\"loading\":\"ContactList_loading__lfAh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__1cEG-\",\"label\":\"LoginForm_label__3kIb3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2lE0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mail\":\"UserMenu_mail__3NkYp\",\"button\":\"UserMenu_button__3_5WE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__3oBAB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__ZNpKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__WIJFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__gysku\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__3l1Es\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__15-fH\"};","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // ERROR\n  }\n});\n\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {}\n});\n\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {}\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      console.log('None token');\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {}\n  },\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUserMail = state => state.auth.user.email;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserMail,\n};\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\nimport styles from './RegistrationForm.module.css';\n\nexport default function RegistrationForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h2>Registration page</h2>\n\n      <form onSubmit={handleSubmit} className={styles.form} autoComplete=\"off\">\n        <label className={styles.label}>\n          Name\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label className={styles.label}>\n          Mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Registration</button>\n      </form>\n    </div>\n  );\n}\n","import RegistrationForm from '../components/RegistrationForm/RegistrationForm';\nexport default function RegisterView() {\n  return (\n    <>\n      <RegistrationForm />\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\nimport styles from './LoginForm.module.css';\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h2>Login page</h2>\n\n      <form onSubmit={handleSubmit} className={styles.form} autoComplete=\"off\">\n        <label className={styles.label}>\n          Mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n}\n","import LoginForm from '../components/LoginForm/LoginForm';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport default function LoginView() {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n}\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add');\nexport const changeFilter = createAction('contacts/changeFilter');\nexport const deleteContact = createAction('contacts/delete');\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getError = state => state.contacts.error;\nconst getLoading = state => state.contacts.loading;\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\nconst getFiltredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n\nconst contactsSelectors = {\n  getError,\n  getLoading,\n  getContacts,\n  getFilter,\n  getFiltredContacts,\n};\nexport default contactsSelectors;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-operaions';\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  hendelInputChange = event => {\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\n  };\n  hendelSubmit = event => {\n    event.preventDefault();\n\n    const isAvailable = this.props.contacts.some(\n      contactItem =>\n        contactItem.name.toLowerCase() === this.state.name.toLowerCase(),\n    );\n    if (isAvailable) {\n      alert(`${this.state.name} is already in contacts.`);\n      this.setState({\n        name: '',\n        number: '',\n      });\n      return;\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    this.props.onAddContact(newContact);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className={styles.ContactForm} onSubmit={this.hendelSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-ЯІіЇїҐґ]+(([' -][a-zA-Zа-яА-ЯІіЇїҐґ ])?[a-zA-Zа-яА-ЯІіЇїҐґ]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.hendelInputChange}\n            value={this.state.name}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.hendelInputChange}\n            value={this.state.number}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getContacts(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: contact => dispatch(addContact(contact)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\nimport axios from 'axios';\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n  try {\n    const { data } = await axios.get(`/contacts`);\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nexport const addContact = contact => async dispatch => {\n  dispatch(addContactRequest());\n  try {\n    const { data } = await axios.post(`/contacts`, contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\n\nexport const deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n","import React from 'react';\nimport styles from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst Filter = () => {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  const onChangeFilter = event =>\n    dispatch(changeFilter(event.currentTarget.value));\n\n  return (\n    <label className={styles.Filter}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={onChangeFilter}\n        value={filter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contact.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-operaions';\n\nconst Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <p>\n        {name} {number}\n      </p>\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\nexport default Contact;\n","import Contact from '../Contact/Contact';\nimport styles from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from '../../redux/contacts/contacts-operaions';\nimport { useEffect } from 'react';\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const error = useSelector(contactsSelectors.getError);\n  const loading = useSelector(contactsSelectors.getLoading);\n  const filtredContacts = useSelector(contactsSelectors.getFiltredContacts);\n  return (\n    <>\n      {loading && <h2 className={styles.loading}>thinking...</h2>}\n      {error && <h2 className={styles.error}>{error}</h2>}\n      <ul className={styles.ContactList}>\n        {filtredContacts.map(({ id, name, number }) => (\n          <li key={id} className={styles.item}>\n            <Contact id={id} name={name} number={number} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\n\nfunction ContactsView() {\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n\nexport default ContactsView;\n","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './Navigation.module.css';\n\nconst Navigation = () => (\n  <nav>\n    <NavLink to=\"/contacts\" exact className={styles.link}>\n      Phonebook\n    </NavLink>\n  </nav>\n);\n\nexport default Navigation;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport styles from './UserMenu.module.css';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const mail = useSelector(authSelectors.getUserMail);\n  return (\n    <div>\n      <p className={styles.mail}>{mail}</p>\n      <button\n        type=\"button\"\n        onClick={() => dispatch(authOperations.logOut())}\n        className={styles.button}\n      >\n        Logout\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './AuthNav.module.css';\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink to=\"/register\" exact className={styles.link}>\n        Registation\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        className={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Login\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from '../Navigation/Navigation';\nimport UserMenu from '../UserMenu/UserMenu';\nimport AuthNav from '../AuthNav/AuthNav';\nimport { authSelectors } from '../../redux/auth';\nimport styles from './AppBar.module.css';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header className={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport RegisterView from './views/RegisterView';\nimport LoginView from './views/LoginView';\nimport ContactsView from './views/ContactsView';\n\nimport Container from './components/Container/Container';\nimport AppBar from './components/AppBar/AppBar';\n\nimport { authOperations } from './redux/auth';\n\nimport 'modern-normalize/modern-normalize.css';\nimport styles from './App.module.css';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container className={styles.container}>\n      <AppBar />\n      <Switch>\n        <Route path=\"/register\" component={RegisterView} />\n        <Route path=\"/login\" component={LoginView} />\n        <Route path=\"/contacts\" component={ContactsView} />\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","import {\n  changeFilter,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => {\n    return [...state, payload];\n  },\n\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n  [fetchContactsRequest]: () => null,\n  [addContactRequest]: () => null,\n  [deleteContactRequest]: () => null,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  loading,\n  error,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}