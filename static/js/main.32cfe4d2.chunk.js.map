{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","App.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operaions.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","changeFilter","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","axios","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","contactsSelectors","getError","error","getLoading","loading","getFiltredContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","number","hendelInputChange","event","setState","currentTarget","value","hendelSubmit","preventDefault","props","some","contactItem","alert","newContact","id","uuidv4","onAddContact","className","styles","onSubmit","this","type","pattern","title","required","onChange","Component","connect","dispatch","a","post","data","message","addContact","Filter","useSelector","useDispatch","Contact","button","onClick","delete","deleteContact","ContactList","useEffect","get","filtredContacts","map","item","App","container","createReducer","_","payload","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32cfe4d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__3oBAB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__ZNpKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__WIJFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2B0Zb\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add');\nexport const changeFilter = createAction('contacts/changeFilter');\nexport const deleteContact = createAction('contacts/delete');\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n","import {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n  try {\n    const { data } = await axios.get(`/contacts`);\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nexport const addContact = contact => async dispatch => {\n  dispatch(addContactRequest());\n  try {\n    const { data } = await axios.post(`/contacts`, contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\n\nexport const deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getError = state => state.contacts.error;\nconst getLoading = state => state.contacts.loading;\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\nconst getFiltredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n\nconst contactsSelectors = {\n  getError,\n  getLoading,\n  getContacts,\n  getFilter,\n  getFiltredContacts,\n};\nexport default contactsSelectors;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-operaions';\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  hendelInputChange = event => {\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\n  };\n  hendelSubmit = event => {\n    event.preventDefault();\n\n    const isAvailable = this.props.contacts.some(\n      contactItem =>\n        contactItem.name.toLowerCase() === this.state.name.toLowerCase(),\n    );\n    if (isAvailable) {\n      alert(`${this.state.name} is already in contacts.`);\n      this.setState({\n        name: '',\n        number: '',\n      });\n      return;\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    this.props.onAddContact(newContact);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className={styles.ContactForm} onSubmit={this.hendelSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-ЯІіЇїҐґ]+(([' -][a-zA-Zа-яА-ЯІіЇїҐґ ])?[a-zA-Zа-яА-ЯІіЇїҐґ]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.hendelInputChange}\n            value={this.state.name}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.hendelInputChange}\n            value={this.state.number}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getContacts(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: contact => dispatch(addContact(contact)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport styles from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst Filter = () => {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  const onChangeFilter = event =>\n    dispatch(changeFilter(event.currentTarget.value));\n\n  return (\n    <label className={styles.Filter}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={onChangeFilter}\n        value={filter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contact.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-operaions';\n\nconst Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <p>\n        {name} {number}\n      </p>\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\nexport default Contact;\n","import Contact from '../Contact/Contact';\nimport styles from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from '../../redux/contacts/contacts-operaions';\nimport { useEffect } from 'react';\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const error = useSelector(contactsSelectors.getError);\n  const loading = useSelector(contactsSelectors.getLoading);\n  const filtredContacts = useSelector(contactsSelectors.getFiltredContacts);\n  return (\n    <>\n      {loading && <h2 className={styles.loading}>thinking...</h2>}\n      {error && <h2 className={styles.error}>{error}</h2>}\n      <ul className={styles.ContactList}>\n        {filtredContacts.map(({ id, name, number }) => (\n          <li key={id} className={styles.item}>\n            <Contact id={id} name={name} number={number} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport 'modern-normalize/modern-normalize.css';\nimport styles from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={styles.container}>\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  changeFilter,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => {\n    return [...state, payload];\n  },\n\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n  [fetchContactsRequest]: () => null,\n  [addContactRequest]: () => null,\n  [deleteContactRequest]: () => null,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  loading,\n  error,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__w8aks\",\"item\":\"ContactList_item__J_orZ\",\"error\":\"ContactList_error__21mt_\",\"loading\":\"ContactList_loading__lfAh4\"};"],"sourceRoot":""}